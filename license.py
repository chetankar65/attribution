import pandas as pd
import os
import sys, getopt

htmlhead = '''
<!-- Generated by licenses.py; do not edit. -->
<!doctype html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">
<meta name="color-scheme" content="light dark">
<title> Credits </title>
<script>
function onlyOne(checkbox) {
    var checkboxes = document.getElementsByName('check')
    checkboxes.forEach((item) => {
        if (item !== checkbox) item.checked = false
    })
}
</script>
'''


style = '''
<style>
    html {
      --s-blue-50: rgb(229, 230, 241);
      --s-blue-300: rgb(108, 161, 247);
      --s-blue-600: rgb(46, 112, 199);
      --s-blue-900: rgb(23, 78, 166);
      --s-grey-200: rgb(232, 234, 237);
      --s-grey-800: rgb(60, 64, 67);
      --s-grey-900: rgb(32, 33, 36);
    
      --interactive-color: var(--s-blue-600);
      --primary-color: var(--s-grey-900);
    
      --product-background: var(--s-blue-50);
      --product-text-color: var(--s-blue-900);
    
      background: white;
    }
    
    @media (prefers-color-scheme: dark) {
      html {
        --interactive-color: var(--s-blue-300);
        --primary-color: var(--s-grey-200);
    
        --product-background: var(--s-grey-800);
        --product-text-color: var(--s-grey-200);
    
        background: var(--s-grey-900);
      }
    }
    
    body {
      color: var(--primary-color);
      font-size: 84%;
      max-width: 1020px;
    }
    a {
      color: var(--interactive-color);
    }
    .page-title {
      font-size: 164%;
      font-weight: bold;
    }
    .product {
      background-color: var(--product-background);
      color: var(--product-text-color);
      border-radius: 5px;
      margin-top: 16px;
      overflow: auto;
      padding: 2px;
    }
    .product .title {
      float: left;
      font-size: 110%;
      font-weight: bold;
      margin: 3px;
    }
    .product .homepage {
      color: var(--interactive-color);
      float: right;
      margin: 3px;
      text-align: right;
    }
    .product .homepage::before {
      content: " - ";
    }
    .product .show {
      color: var(--interactive-color);
      float: right;
      margin: 3px;
      text-align: right;
      text-decoration: underline;
    }
    .licence {
      border-radius: 3px;
      clear: both;
      display: none;
      padding: 16px;
    }
    .licence h3 {
      margin-top: 0;
    }
    .licence pre {
      white-space: pre-wrap;
    }
    .dialog #print-link,
    .dialog .homepage {
      display: none;
    }
    input + label + div {
      display: none;
    }
    input + label::before {
      content: "";
      cursor: pointer;
    }
    input:checked + label + div {
      display: block;
    }
    input:checked + label::before {
      content: "hide ";
      cursor: pointer;
    }
    </style>

    '''

closehead = f"</head>"

openbody = f"<body>"

def maplictext(licnames):
    #files = []
    lic = ""
    if (licnames):
        if ('GNU General Public License v1.0' in licnames ):
            link = "https://www.gnu.org/licenses/old-licenses/gpl-1.0.en.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'GNU General Public License v1.0' + '</a>'
            #lic = lic + "GNU GPL V1.0 -  https://www.gnu.org/licenses/old-licenses/gpl-1.0.en.html"
            #files.append('gplv1.0.txt')
        elif ('GNU General Public License v2.0' in licnames ):
            link = "https://opensource.org/licenses/GPL-2.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'GNU General Public License v2.0' + '</a>'
            #lic =lic + '<br />' + "GNU General Public License v2.0 - https://opensource.org/licenses/GPL-2.0"
            #files.append('gplv2.0.txt')
        elif ('GNU General Public License v3.0' in licnames ):
            link = "https://opensource.org/licenses/GPL-3.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'GNU General Public License v3.0' + '</a>'
            #lic =lic + '<br />' + "GNU General Public License v3.0 - https://opensource.org/licenses/GPL-3.0"
            #files.append('gplv3.0.txt')
        elif ('GNU Lesser General Public License v2.1' in licnames ):
            link = "https://opensource.org/licenses/LGPL-2.1"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'GNU Lesser General Public License v2.1' + '</a>'
            #lic =lic + '<br />' + "GNU Lesser General Public License v2.1 - https://opensource.org/licenses/LGPL-2.1"
            #files.append('lgplv3.0.txt')
        elif ('GNU Lesser General Public License v3.0' in licnames ):
            link = "https://opensource.org/licenses/LGPL-3.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'GNU Lesser General Public License v3.0' + '</a>'
            #lic =lic + '<br />' + "GNU Lesser General Public License v3.0 - https://opensource.org/licenses/LGPL-3.0"
            #files.append('lgplv3.0.txt')
        elif ('BSD 3-clause' in licnames):
            link = "https://opensource.org/licenses/BSD-3-Clause"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'BSD 3-clause' + '</a>'
            #lic =lic + '<br />' + "BSD 3-clause - https://opensource.org/licenses/BSD-3-Clause"
            #files.append('BSD-3-clause.txt')
        elif ('Apache License 2.0' in licnames):
            link = "https://opensource.org/licenses/Apache-2.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Apache License 2.0' + '</a>'
            #lic =lic + '<br />' + "Apache License 2.0 - https://opensource.org/licenses/Apache-2.0"
            #files.append('apache2.0.txt')
        elif ('MIT License' in licnames):
            link = "https://opensource.org/licenses/MIT"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'MIT License' + '</a>'
            #lic =lic + '<br />' + "MIT License - https://opensource.org/licenses/MIT"
            #files.append('mit.txt')
        elif ('Eclipse Public License 1.0' in licnames):
            link = "https://opensource.org/licenses/EPL-1.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Eclipse Public License 1.0' + '</a>'
            #lic =lic + '<br />' + "Eclipse Public License 1.0 - https://opensource.org/licenses/EPL-1.0"
            #files.append('eplv1.0.txt')
        elif ('Eclipse Public License 2.0' in licnames):
            link = "https://opensource.org/licenses/EPL-2.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Eclipse Public License 2.0' + '</a>'
            #lic =lic + '<br />' + "Eclipse Public License 2.0 - https://opensource.org/licenses/EPL-2.0"
            #files.append('eplv2.0.txt')
        elif ('Common Development and Distribution License 1.1' in licnames):
            link = "https://spdx.org/licenses/CDDL-1.1.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Common Development and Distribution License 1.1' + '</a>'
            #lic =lic + '<br />' + "Common Development and Distribution License 1.1 - https://spdx.org/licenses/CDDL-1.1.html"
            #files.append('cddlv1.0.txt')
        elif ('Common Development and Distribution License 2' in licnames):
            lic =lic + '<br />' + "Common Development and Distribution License"
            #files.append('cddlv2.0.txt')
        elif ('Mozilla' in licnames):
            link = "https://opensource.org/licenses/MPL-2.0"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Mozilla' + '</a>'
            #lic =lic + '<br />' + "Mozilla - https://opensource.org/licenses/MPL-2.0"
            #files.append('mplv2.0.txt')
        elif ('NVIDIA CUDA Toolkit' in licnames):
            link = "https://docs.nvidia.com/cuda/eula/index.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'NVIDIA CUDA Toolkit' + '</a>'
            #lic =lic + '<br />' + "NVIDIA CUDA Toolkit - https://docs.nvidia.com/cuda/eula/index.html"
            #files.append('NVIDIA-Cuda.txt')
        elif ('PostgreSQL License' in licnames):
            link = "https://opensource.org/licenses/PostgreSQL"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'PostgreSQL License' + '</a>'
            #lic =lic + '<br />' + "PostgreSQL License - https://opensource.org/licenses/PostgreSQL"
            #files.append('PostgreSQL.txt')
        elif ('PCRE' in licnames):
            link = "https://www.pcre.org/licence.txt"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'PCRE License' + '</a>'
            #lic =lic + '<br />' + "PCRE License - https://www.pcre.org/licence.txt"
            #files.append('pcre.txt')
        elif ('curl' in licnames):
            link = "https://curl.haxx.se/docs/copyright.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'curl License' + '</a>'
            #lic =lic + '<br />' + "curl License - https://curl.haxx.se/docs/copyright.html"
            #files.append('curl.txt')
        elif (('OpenSSL License' in licnames) or ('Open SSL License' in licnames)):
            link = "https://www.openssl.org/source/license.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'OpenSSL License' + '</a>'
            #lic =lic + '<br />' + "OpenSSL License - https://www.openssl.org/source/license.html"
            #files.append('openssl.txt')   
        elif ('ANTLR' in licnames):
            link = "https://www.antlr.org/license.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'ANTLR License' + '</a>'
            #lic =lic + '<br />' + "ANTLR License - https://www.antlr.org/license.html"
            #files.append('antlr.txt')       
        elif ('W3C' in licnames):
            link = "https://opensource.org/licenses/W3C"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'W3C License' + '</a>'
            #lic =lic + '<br />' + "W3C License - https://opensource.org/licenses/W3C"
            #files.append('w3c.txt')
        elif ('BSD 4-' in licnames):
            link = "https://spdx.org/licenses/BSD-4-Clause.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'BSD 4 License' + '</a>'
            #lic =lic + '<br />' + "BSD 4 License - https://spdx.org/licenses/BSD-4-Clause.html" 
            #files.append('BSD4-Clause.txt')
        elif ('dom4j' in licnames):
            link = "https://github.com/dom4j/dom4j/blob/master/LICENSE"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'dom4j License' + '</a>'
            #lic =lic + '<br />' + "dom4j License - https://github.com/dom4j/dom4j/blob/master/LICENSE"
            #files.append('dom4j.txt')
        elif (('zlib' in licnames) or ('libpng' in licnames)):
            link = "https://opensource.org/licenses/Zlib"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'zlib/libpng License' + '</a>'
            #lic =lic + '<br />' + "zlib/libpng License - https://opensource.org/licenses/Zlib"
            #files.append('zlib.txt')
        elif ('Creative Common' in licnames):
            link = "https://creativecommons.org/licenses/by/2.5/in/"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Creative Common License' + '</a>'
            #lic =lic + '<br />' + "Creative Common License - https://creativecommons.org/licenses/by/2.5/in/"
            #files.append('cc2.5.txt')
        elif ('Classpath Exception' in licnames):
            link = "https://openjdk.java.net/legal/gplv2+ce.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Classpath Exception License' + '</a>'
            #lic =lic + '<br />' + "Classpath Exception License - https://openjdk.java.net/legal/gplv2+ce.html"
            #files.append('gplv2.0.txt')
        elif ('Open Market' in licnames):
            link = "https://spdx.org/licenses/OML.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Open Market License' + '</a>'
            #lic =lic + '<br />' + "Open Market License - https://spdx.org/licenses/OML.html"
            #files.append('oml.txt')
        elif ('Christian Michelsen' in licnames):
            link = "https://enterprise.dejacode.com/licenses/public/cmr-no/#license-text"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Christian Michelsen License' + '</a>'
            #lic =lic + '<br />' + "Christian Michelsen License - https://enterprise.dejacode.com/licenses/public/cmr-no/#license-text"
            #files.append('cmr.txt')
        elif ('Bind' in licnames):
            lic =lic + '<br />' + "Bind"
            #files.append('mplv2.0.txt')
        elif ('Oracle Binary' in licnames):
            link = "https://www.oracle.com/in/downloads/licenses/binary-code-license.html"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Oracle Binary Code License' + '</a>'
            #lic =lic + '<br />' + "Oracle Binary Code License - https://www.oracle.com/in/downloads/licenses/binary-code-license.html"
            #files.append('obcl.txt')
        elif ('Sun Binary' in licnames):
            link = "https://download.java.net/media/jai/builds/release/1_1_3/LICENSE-jai.txt"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Sun Binary License' + '</a>'
            #lic =lic + '<br />' + "Sun Binary License - https://download.java.net/media/jai/builds/release/1_1_3/LICENSE-jai.txt"
            #files.append('sbcl.txt')
        elif ('JAVA Research' in licnames):
            link = "https://www.oracle.com/technetwork/java/javase/jrl-5-150091.txt"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Java Research License' + '</a>'
            #lic =lic + '<br />' + "Java Research License - https://www.oracle.com/technetwork/java/javase/jrl-5-150091.txt"
            #files.append('jrl.txt')
        elif ('Apache License 1.1' in licnames):
            link = "https://www.apache.org/licenses/LICENSE-1.1"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'Apache License 1.1' + '</a>'
        elif ('OpenVPN GPL 2 Only with Exception License' in licnames):
            link = "https://openvpn.net/license/"
            lic = lic + '<br />' + '<a href=' + link + '>' + 'OpenVPN GPL 2 Only with Exception License' + '</a>'
        else:
            lic = lic + 'Unknown license.'
    else:
        #print('Please')
        lic = lic + 'Unknown license.'
        
    return lic
    
def get_repo(name, id):
    if(pd.isnull(name)):
        return '<br /> Unknown'
    if (('unknown' in name) and pd.isnull(id)):
        id = 'Unknown'
    name_str = name.split()
    id_str = id.split()
    i = 0
    url = ""
    for s in id_str: 
        id = s.replace(",","")
        name = name_str[i].replace(",","")
        method='component_' + name
        i = i + 1
        if (name == 'maven'):
            link = component_maven(id)
            url = url + '<br />' + '<a href=' + link + '>' + link + '</a>'
        elif (name == 'github'):
            link = component_github(id)
            url = url + '<br />' + '<a href=' + link + '>' + link + '</a>'
        elif (name == 'ubuntu'):
            link = component_ubuntu(id)
            url = url + '<br />' + '<a href=' + link + '>' + link + '</a>'
        elif (name == 'debian'):
            link = component_debian(id)
            url = url + '<br />' + '<a href=' + link + '>' + link + '</a>'
        elif (name == 'npmjs'):
            link = component_npmjs(id)
            url = url + '<br />' + '<a href=' + link + '>' + link + '</a>'
        elif (name != 'unknown'):
            url = url + '<br />' + "Origin name:" + name + ", Origin id:" + id
    if (url == ""):
        url = url + '<br />' + 'Unknown'
    return url

def component_maven(id):
    s = id.replace(":","/")
    url = "https://mvnrepository.com/artifact/" + s
    return url

def component_github(id):
    s = id.split(':')
    url = "https://github.com/" + s[0]
    return url

def component_ubuntu(id):
    s = id
    url = "https://launchpad.net/ubuntu/+source/" + s
    return url

def component_debian(id):
    s = id
    url = "https://launchpad.net/debian/+source/" + s
    return url

def component_npmjs(id):
    s = id.split('/')
    url = "https://www.npmjs.com/package/" + s[0] + '/v/' + s[1]
    return url



#Build one lic 

def buildlicrow (component, index, lictext, repolink, version):
    row = ""
    rindex = 1000 + index
    vindex = 2000 + index
    hdr = f'''
    <!--div style="clear:both; overflow:auto;"-->
    <div class="product">
    <span class="title">{component}</span>
    '''
    homepage =f'''
    <input type="checkbox" hidden id="{rindex}" name="check" onclick="onlyOne(this)">
    <label class="show" for="{rindex}" tabindex={index}>source code</label>
    <div class = "licence">
    <pre>
    '''
    
    lic = f'''
    <!--/pre-->
    </div>
    <input type="checkbox" hidden id="{index}" name="check" onclick="onlyOne(this)">
    <label class="show" for="{index}" tabindex={index}>license</label>
    <div class="licence">
    
    <!--pre-->
    '''
    ver = f'''
    </div>
    <input type="checkbox" hidden id="{vindex}" name="check" onclick="onlyOne(this)">
    <label class="show" for="{vindex}" tabindex={index}>version</label>
    <div class="licence">
    '''
    
    tail = '''
    </pre>
    </div>
    </div>
    '''
    row = hdr + homepage + repolink + lic + lictext + ver + version + tail
    
    return row
 
close = "</div></body> </html>"

def outhtml(inputfile, outputfile, productname):
    if os.path.isfile(inputfile):
        try:
            nds = pd.read_csv(inputfile, usecols=['Component name',"License names", 'Origin name', 'Origin id', 'Component version name'])
            nds = nds.dropna()
        except:
            return False
    else:
        print ("Input file does not exist")
        return False

    if os.path.isfile(outputfile):
        os.remove (outputfile)
        
    
    with open(outputfile, 'a') as f:
        #file openers
        f.write (htmlhead)
        f.write (style)
        f.write (closehead)
        f.write (openbody)
        h2 = f"<h2> Credits - {productname} </h2>"
        f.write (h2)

        for ind in nds.index:
            row = buildlicrow (nds['Component name'][ind], ind, maplictext(nds['License names'][ind]), get_repo(nds['Origin name'][ind], nds['Origin id'][ind]), nds['Component version name'][ind])
            f.write (row)
        
        f.write (close)
    
    return True

#outhtml('components_2020-04-07_071843.csv', 'index.html', 'My Prod')